{
	"AWS": {
		"app": {
			"datasources": {
				"myDB": {
					"dbmyname": "myDB",
					"database": "demo",
					"password": "L00pBack",
					"connector": "mysql",
					"port": "3306",
					"host": "demo.strongloop.com",
					"username": "demo"
				},
				"db": {
					"connector": "memory",
					"dbname": "db"
				}
			},
			"middleware": {
				"final:after": {
					"loopback#errorHandler": {}
				},
				"routes": {
					"loopback#rest": {
						"paths": {
							"${restApiRoot}": {}
						}
					}
				},
				"auth": {},
				"initial": {
					"cors": {
						"params": {
							"credentials": "true",
							"maxAge": "86400",
							"origin": "true"
						}
					},
					"compression": {}
				},
				"session": {},
				"initial:before": {
					"loopback#favicon": {}
				},
				"final": {
					"loopback#urlNotFound": {}
				},
				"files": {
					"loopback#static": {
						"params": "$!../client"
					}
				},
				"parse": {}
			}
		},
		"AWSserverTemplates": {
			"AWS-EC2-InstanceCatalogue": {
				"x-large": {
					"instancetype": "t2.x-large"
				},
				"imageid": "ami-fsdgas",
				"size": "0.5",
				"micro": {
					"instancetype": "t2.micro"
				},
				"nano": {
					"size": "0.25",
					"instancetype": "t2.nano"
				},
				"volumesize": "50",
				"description": "aws-base-image",
				"instancetype": "t2.micro",
				"medium": {
					"instancetype": "t2.medium"
				},
				"Properties": {
					"ImageId": "ami-0ff8a91507f77f867",
					"AvailabilityZone": "us-east-1a"
				},
				"region": "EMEA",
				"type": "AWS::EC2::Instance"
			},
			"AWS-ECS": {
				"AWSTemplateFormatVersion": "2010-09-09",
				"Base-ECS-Deployment": {
					"MountPoint": {
						"Type": "String",
						"Description": "The Linux mount point for the EFS volume",
						"MinLength": "1",
						"Default": "myEFSvolume"
					},
					"VolumeName": {
						"Type": "String",
						"Description": "The name to be used for the EFS volume",
						"MinLength": "1",
						"Default": "myEFSvolume"
					},
					"AsgMaxSize": {
						"Type": "Number",
						"Description": "Maximum size and initial desired capacity of Auto Scaling Group",
						"Default": "2"
					}
				},
				"Parameters": {
					"KeyName": {
						"Type": "AWS::EC2::KeyPair::KeyName",
						"Description": "Name of an existing EC2 key pair to enable SSH access to the ECS instances"
					},
					"MountPoint": {
						"Type": "String",
						"Description": "The Linux mount point for the EFS volume",
						"MinLength": "1",
						"Default": "myEFSvolume"
					},
					"VolumeName": {
						"Type": "String",
						"Description": "The name to be used for the EFS volume",
						"MinLength": "1",
						"Default": "myEFSvolume"
					},
					"SSHLocation": {
						"Type": "String",
						"Description": "The IP address range that can be used to connect to the EC2 instances by using SSH",
						"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
						"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
						"MinLength": "9",
						"MaxLength": "18",
						"Default": "0.0.0.0/0"
					},
					"AsgMaxSize": {
						"Type": "Number",
						"Description": "Maximum size and initial desired capacity of Auto Scaling Group",
						"Default": "2"
					},
					"InstanceType": {
						"Type": "String",
						"Description": "WebServer EC2 instance type",
						"ConstraintDescription": "must be a valid EC2 instance type.",
						"Default": "t2.small"
					}
				},
				"Description": "This template creates an Amazon EFS file system and mount target and associates it with Amazon EC2 instances in an Auto Scaling group. **WARNING** This template creates Amazon EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template."
			},
			"AWS-OpsWork": {
				"Parameters": {
					"ServiceRole": {
						"Type": "String",
						"Description": "The OpsWorks service role",
						"AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
						"ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
						"MinLength": "1",
						"MaxLength": "64",
						"Default": "aws-opsworks-service-role"
					},
					"InstanceRole": {
						"Type": "String",
						"Description": "The OpsWorks instance role",
						"AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
						"ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
						"MinLength": "1",
						"MaxLength": "64",
						"Default": "aws-opsworks-ec2-role"
					},
					"MysqlRootPassword": {
						"NoEcho": "true",
						"Type": "String",
						"Description": "MysqlRootPassword"
					},
					"AppName": {
						"Type": "String",
						"Description": "The app name",
						"AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
						"ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
						"MinLength": "1",
						"MaxLength": "64",
						"Default": "myapp"
					}
				},
				"Resources": {
					"myAppInstance1": {
						"Type": "AWS::OpsWorks::Instance",
						"Properties": {
							"LayerIds": {
								"null": {
									"Ref": "myLayer"
								}
							},
							"InstanceType": "m1.small",
							"StackId": {
								"Ref": "myStack"
							}
						}
					},
					"ELBAttachment": {
						"Type": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
						"Properties": {
							"LayerId": {
								"Ref": "myLayer"
							},
							"ElasticLoadBalancerName": {
								"Ref": "ELB"
							}
						}
					},
					"myStack": {
						"Type": "AWS::OpsWorks::Stack",
						"Properties": {
							"CustomCookbooksSource": {
								"Type": "git",
								"Url": "git://github.com/amazonwebservices/opsworks-example-cookbooks.git"
							},
							"DefaultInstanceProfileArn": "arn:aws:iam::${AWS::AccountId}:instance-profile/${InstanceRole}",
							"ServiceRoleArn": "arn:aws:iam::${AWS::AccountId}:role/${ServiceRole}",
							"UseCustomCookbooks": "true"
						}
					},
					"DBLayer": {
						"DependsOn": "myApp",
						"Type": "AWS::OpsWorks::Layer",
						"Properties": {
							"EnableAutoHealing": "true",
							"Type": "db-master",
							"AutoAssignElasticIps": "false",
							"Attributes": {
								"MysqlRootPassword": {
									"Ref": "MysqlRootPassword"
								},
								"MysqlRootPasswordUbiquitous": "true"
							},
							"Shortname": "db-layer",
							"CustomRecipes": {
								"Setup": {
									"phpapp::dbsetup": {}
								}
							},
							"AutoAssignPublicIps": "true",
							"VolumeConfigurations": {
								"null": {
									"MountPoint": "/vol/mysql",
									"Size": "10",
									"NumberOfDisks": "1"
								}
							},
							"StackId": {
								"Ref": "myStack"
							},
							"Name": "MyMySQL"
						}
					},
					"ELB": {
						"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
						"Properties": {
							"Listeners": {
								"null": {
									"InstancePort": "80",
									"LoadBalancerPort": "80",
									"Protocol": "HTTP",
									"InstanceProtocol": "HTTP"
								}
							},
							"AvailabilityZones": {
								"Fn::GetAZs": ""
							},
							"HealthCheck": {
								"Target": "HTTP:80/",
								"UnhealthyThreshold": "10",
								"Timeout": "5",
								"HealthyThreshold": "2",
								"Interval": "30"
							}
						}
					},
					"myLayer": {
						"DependsOn": "myApp",
						"Type": "AWS::OpsWorks::Layer",
						"Properties": {
							"EnableAutoHealing": "true",
							"Type": "php-app",
							"AutoAssignElasticIps": "false",
							"Shortname": "php-app",
							"CustomRecipes": {
								"Configure": {
									"phpapp::appsetup": {}
								}
							},
							"AutoAssignPublicIps": "true",
							"StackId": {
								"Ref": "myStack"
							},
							"Name": "MyPHPApp"
						}
					},
					"myDBInstance": {
						"Type": "AWS::OpsWorks::Instance",
						"Properties": {
							"LayerIds": {
								"null": {
									"Ref": "DBLayer"
								}
							},
							"InstanceType": "m1.small",
							"StackId": {
								"Ref": "myStack"
							}
						}
					},
					"myApp": {
						"Type": "AWS::OpsWorks::App",
						"Properties": {
							"Type": "php",
							"Attributes": {
								"DocumentRoot": "web"
							},
							"AppSource": {
								"Type": "git",
								"Revision": "version2",
								"Url": "git://github.com/amazonwebservices/opsworks-demo-php-simple-app.git"
							},
							"Name": {
								"Ref": "AppName",
								"IP": "",
								"Name": ""
							},
							"StackId": {
								"Ref": "myStack"
							}
						}
					},
					"myAppInstance2": {
						"Type": "AWS::OpsWorks::Instance",
						"Properties": {
							"LayerIds": {
								"null": {
									"Ref": "myLayer"
								}
							},
							"InstanceType": "m1.small",
							"StackId": {
								"Ref": "myStack"
							}
						}
					}
				},
				"OpsWork": "2010-09-09"
			},
			"AWS-EC2-Instance": {
				"imageid": "ami-fsdgas",
				"size": "0.5",
				"volumesize": "50",
				"description": "aws-base-image",
				"instancetype": "t2.micr",
				"region": "EMEA",
				"type": "AWS::EC2::Instance"
			},
			"AWS-RDS-DB": {
				"LicenseModel": "bring-your-own-license",
				"MasterUserPassword": "SecretPassword01",
				"DeletionPolicy": "@@env.DeletionPolicy@@",
				"Type": "AWS::RDS::DBInstance",
				"DBInstanceClass": "db.m1.small",
				"MasterUsername": "master",
				"Engine": "oracle-ee",
				"AllocatedStorage": "11"

			},
			"AWS-S3": {
				"IndexDocument": "index.html",
				"Type": "AWS::S3::BucketPolicy",
				"Bucket": "S3Bucket",
				"Version": "2012-10-17",
				"AWS-S3": "2010-09-09",
				"Id": "TradeMax Bucket",
				"AccessControl": "PublicRead",
				"ErrorDocument": "error.html"
			},
			"AWS-Lambda": {
				"AWSTemplateFormatVersion": "2010-09-09",
				"Parameters": {
					"ExistingSecurityGroups": {
						"Type": "List<AWS::EC2::SecurityGroup::Id>"
					},
					"ExistingVPC": {
						"Type": "AWS::EC2::VPC::Id",
						"Description": "The VPC ID that includes the security groups in the ExistingSecurityGroups parameter."
					},
					"InstanceType": {
						"Type": "String",
						"AllowedValues": {
							"t2.micro": {},
							"m1.small": {}
						},
						"Default": "t2.micro"
					}
				},
				"Mappings": {
					"AWSInstanceType2Arch": {
						"t2.micro": {
							"Arch": "HVM64"
						},
						"m1.small": {
							"Arch": "HVM64"
						}
					},
					"AWSRegionArch2AMI": {
						"cn-north-1": {
							"HVM64": "ami-0a4eaf6c4454eda75",
							"HVMG2": "NOT_SUPPORTED"
						},
						"eu-west-1": {
							"HVM64": "ami-047bb4163c506cd98",
							"HVMG2": "ami-0a7c483d527806435"
						},
						"ap-southeast-1": {
							"HVM64": "ami-08569b978cc4dfa10",
							"HVMG2": "ami-0be9df32ae9f92309"
						},
						"ap-southeast-2": {
							"HVM64": "ami-09b42976632b27e9b",
							"HVMG2": "ami-0a9ce9fecc3d1daf8"
						},
						"eu-central-1": {
							"HVM64": "ami-0233214e13e500f77",
							"HVMG2": "ami-06223d46a6d0661c7"
						},
						"ap-northeast-1": {
							"HVM64": "ami-06cd52961ce9f0d85",
							"HVMG2": "ami-053cdd503598e4a9d"
						},
						"us-east-1": {
							"HVM64": "ami-0ff8a91507f77f867",
							"HVMG2": "ami-0a584ac55a7631c0c"
						},
						"sa-east-1": {
							"HVM64": "ami-07b14488da8ea02a0",
							"HVMG2": "NOT_SUPPORTED"
						},
						"us-west-1": {
							"HVM64": "ami-0bdb828fd58c52235",
							"HVMG2": "ami-066ee5fd4a9ef77f1"
						},
						"us-west-2": {
							"HVM64": "ami-a0cfeed8",
							"HVMG2": "ami-0e09505bc235aa82d"
						}
					}
				},
				"Outputs": {
					"AllSecurityGroups": {
						"Description": "Security Groups that are associated with the EC2 instance",
						"Value": {
							"Fn::Join": {
								"Fn::GetAtt": {
									"AllSecurityGroups": {},
									"Value": {}
								},
								",": {}
							}
						}
					}
				},
				"Resources": {
					"AllSecurityGroups": {
						"Type": "Custom::Split",
						"Properties": {
							"ServiceToken": "AppendItemToListFunction.Arn",
							"AppendedItem": {
								"Ref": "SecurityGroup"
							},
							"List": {
								"Ref": "ExistingSecurityGroups"
							}
						}
					},
					"MyEC2Instance": {
						"Type": "AWS::EC2::Instance",
						"Properties": {
							"ImageId": {
								"Fn::FindInMap": {
									"null": {
										"Ref": "AWS::Region"
									},
									"Fn::FindInMap": {
										"null": {
											"Ref": "InstanceType"
										},
										"Arch": {},
										"AWSInstanceType2Arch": {}
									},
									"AWSRegionArch2AMI": {}
								}
							},
							"InstanceType": {
								"Ref": "InstanceType"
							},
							"SecurityGroupIds": "AllSecurityGroups.Value"
						}
					},
					"SecurityGroup": {
						"Type": "AWS::EC2::SecurityGroup",
						"Properties": {
							"GroupDescription": "Allow HTTP traffic to the host",
							"VpcId": {
								"Ref": "ExistingVPC"
							},
							"SecurityGroupIngress": {
								"null": {
									"CidrIp": "0.0.0.0/0",
									"FromPort": "80",
									"ToPort": "80",
									"IpProtocol": "tcp"
								}
							},
							"SecurityGroupEgress": {
								"null": {
									"CidrIp": "0.0.0.0/0",
									"FromPort": "80",
									"ToPort": "80",
									"IpProtocol": "tcp"
								}
							}
						}
					},
					"AppendItemToListFunction": {
						"Type": "AWS::Lambda::Function",
						"Properties": {
							"Role": "LambdaExecutionRole.Arn",
							"Runtime": "nodejs8.10",
							"Handler": "index.handler",
							"Code": {
								"ZipFile": "var response = require('cfn-response');\nexports.handler = function(event, context) {\n   var responseData = {Value: event.ResourceProperties.List};\n   responseData.Value.push(event.ResourceProperties.AppendedItem);\n   response.send(event, context, response.SUCCESS, responseData);\n};\n"
							}
						}
					},
					"LambdaExecutionRole": {
						"Type": "AWS::IAM::Role",
						"Properties": {
							"Path": "/",
							"Policies": {
								"PolicyDocument": {
									"Version": "2012-10-17",
									"Statement": {
										"Action": {
											"logs:*": {}
										}
									}
								}
							},
							"AssumeRolePolicyDocument": {
								"Version": "2012-10-17",
								"Statement": {
									"Action": {
										"sts:AssumeRole": {}
									}
								}
							}
						}
					}
				}
			},
			"AWS-CloudFront": {
				"AWSTempAWlateFormatVersion": "2010-09-09",
				"EMEA-Deployment": {
					"IncludeCookies": "false",
					"Bucket": "mylogs.s3.amazonaws.co.UK",
					"Prefix": "myprefix",
					"region": "uk-dr1"
				},
				"Resources": {
					"myDistribution": {
						"Type": "AWS::CloudFront::Distribution",
						"Properties": {
							"DistributionConfig": {
								"Logging": {
									"IncludeCookies": "false",
									"Bucket": "mylogs.s3.amazonaws.com",
									"Prefix": "myprefix"
								},
								"Origins": {
									"myS3Origin": {
										"DomainName": "mybucket.s3.amazonaws.com",
										"S3OriginConfig": {
											"OriginAccessIdentity": "origin-access-identity/cloudfront/E127EXAMPLE51Z"
										},
										"Id": "myS3Origin"
									}
								},
								"ViewerCertificate": {
									"CloudFrontDefaultCertificate": "true"
								},
								"Comment": "Some comment",
								"DefaultRootObject": "index.html",
								"PriceClass": "PriceClass_200",
								"DefaultCacheBehavior": {
									"AllowedMethods": {
										"HEAD": {},
										"DELETE": {},
										"POST": {},
										"GET": {},
										"OPTIONS": {},
										"PATCH": {},
										"PUT": {}
									},
									"TargetOriginId": "myS3Origin",
									"ViewerProtocolPolicy": "allow-all",
									"ForwardedValues": {
										"Cookies": {
											"Forward": "none"
										},
										"QueryString": "false"
									},
									"TrustedSigners": {
										"1234567890EX": {},
										"1234567891EX": {}
									}
								},
								"Enabled": "true",
								"Aliases": {
									"mysite.example.com": {},
									"yoursite.example.com": {}
								},
								"Restrictions": {
									"GeoRestriction": {
										"Locations": {
											"AQ": {},
											"CV": {}
										},
										"RestrictionType": "whitelist"
									}
								}
							}
						}
					}
				},
				"US-Deployment": {
					"IncludeCookies": "false",
					"Bucket": "mylogs.s3.amazonaws.com",
					"Prefix": "myprefix",
					"region": "us-north-1"
				}
			}
		},
		"regionalServers": {
			"EMEA": {
				"AL-EMEA-NORTH": {},
				"AL-EMEA-SOUTH": {
					"adminUsername": "CentralPRD",
					"adminPasswordKey": "aiuginu2n23",
					"offering": "Persistent",
					"ubuntuOSVersion": "6.4.7",
					"location": "us-central",
					"authenticationType": "SSH"
				}
			},
			"APJ": {
				"GCP-APJ": {
					"zone": "EMEA-central1-a",
					"env.core.install.path": "",
					"env.core.url": "",
					"offering": "PERSISTENT",
					"env.db.host": "",
					"type": "compute.v1.instance",
					"deviceName": "UAT",
					"machineName": "vm-created-by-deployment-manager",
					"machineType": "zones/us-central1-a/machineTypes/n1-standard-1"
				},
				"AL-APAC": {
					"adminUsername": "Centraltst",
					"adminPasswordKey": "LNIAF",
					"offering": "LOW",
					"ubuntuOSVersion": "6.4.7",
					"location": "",
					"authenticationType": "Local"
				}
			},
			"US": {
				"GCP-AMERICA-SOUTH": {
					"zone": "EMEA",
					"env.core.install.path": "",
					"offering": "LOW",
					"type": "compute.v1.instance",
					"deviceName": "TST",
					"machineName": "vm-created-by-deployment-manager",
					"machineType": "zones/us-central1-a/machineTypes/n1-standard-1"
				},
				"GCP-AMERICA-NORTH": {
					"zone": "us-central1-a",
					"offering": "LOW",
					"type": "compute.v1.instance",
					"deviceName": "TST",
					"machineName": "vm-created-by-deployment-manager",
					"machineType": "zones/us-central1-a/machineTypes/n1-standard-1"
				}
			}
		}
	}
}